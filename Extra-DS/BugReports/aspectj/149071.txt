[itds] Improper visibility of ITD in nested inner type
This code fails, but should work: public aspect AspectItd { //private interface Holder {} private int Holder.x; static aspect Inner { int doIt(Holder h) { return h.x++; } } } interface Holder{} C:\devel\scratch\inner>ajc AspectItd.java C:\devel\scratch\inner\AspectItd.java:6 [error] The field Holder.x is not visibl e return h.x++; 1 error This appears to be incorrectly applying the visibility rules based on the declared type (i.e., a private defined on Holder shouldn't be visible in Inner), whereas of course it should be using the aspect's visibility rule: the field is visible to AspectItd, hence to Inner. If you make the interface an inner type, then it works properly (i.e., comment out interface Holder and uncomment the line above). By analogy, this Java code also works: public class Java { private int x; static class Inner { int doIt(Java j) { return j.x++; } } }