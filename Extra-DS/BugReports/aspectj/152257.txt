Incremental compiler doesn't handle exception declaration correctly
Incrementally compiling code with advice throwing an excpetion gives errors stating that the exception can't be thrown. Full compilation compiles the code successfully. AJDT Version: 1.4.1 Build id: 20060727081607 AspectJ version: 1.5.3.20060726092219 Here is the minimum code the reproduce the behavior. // Main.java package test; import java.io.IOException; public class Main { public void testMethod() throws IOException { methodThatThrows(); } public static void methodThatThrows() throws IOException { System.out.println("Inside method that may throw an IOException"); } } // IOExceptionInjector.aj package test; import java.io.IOException; public aspect IOExceptionInjector { pointcut faultInjection() : call(void methodThatThrows() throws IOException); void around() throws IOException : faultInjection() { throw new IOException("Exception injected by aspect."); } } 1. Modify something in Main.java (add and delete a space, for example). 2. Save to compile incremetally. An error is issued for the call to methodThatThrows() stating "Severity and Description Path Resource Location Creation Time Id can't throw checked exception 'java.io.IOException' at this join point 'method-call(void test.Main.methodThatThrows())' IncrementalCompilerHandlingException/src/test Main.java line 7 1154196826350 7956 " Do a full rebuild and the error goes away.