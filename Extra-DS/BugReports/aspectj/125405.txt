Bad user template code can lead to exception thrown message
To reproduce: Create a new AspectJ project, and create a new aspect: package test; public aspect ATest { // main public static void main(String[] args) { } } ==== Then, write ATest<T> instead of just ATest and then save. You should now get the warning: 2 only abstract aspects can have type parameters ATest.aj So far so good. Now, remove the newly added "<T>" and save again. This should happen: java.lang.IllegalStateException at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:605) at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:590) at org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:421) at org.aspectj.weaver.ResolvedType.getDeclaredAdvice(ResolvedType.java:699) at org.aspectj.weaver.ResolvedType.getDeclaredShadowMungers(ResolvedType.java:736) at org.aspectj.weaver.ResolvedType.collectShadowMungers(ResolvedType.java:572) at org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers(ResolvedType.java:501) at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:66) at org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:439) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:283) at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178) at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70) at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254) at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163) at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117) at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191) IllegalStateException thrown: Can't ask to parameterize a member of non-generic type: test.ATest kind(raw)