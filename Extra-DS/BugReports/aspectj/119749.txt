execution incorrectly matching based on overridden method throws clause
Per user email "after() throwing matching on interface" and the code below, the execution PCD is matching based on a throws clause declared in the overridden method of a supertype. While this tracks the multiple-signature model for the execution join point, it's not correct to say that the method will throw the exceptions declared by the method it overrides, unless it explicitly declares them, so it seems like a bug. (We should also document the difference between call and execution in this respect.) In the code below, all warnings are matched by all method implementations because they implement MyInterface. -------------------- bugs/InheritedThrows.java package bugs; public class InheritedThrows { static aspect A { declare warning : execution (* *.*(..) throws Ex1) : "one"; declare warning : execution (* *.*(..) throws Ex2) : "two"; declare warning : execution (* *.*(..) throws !(Ex1||Ex2)) : "neither"; declare warning : execution (* *.*(..) throws Ex1, Ex2) : "both"; } public static class Ex1 extends Exception {} public static class Ex2 extends Exception {} public interface MyInterface { public void m() throws Ex1, Ex2; } private static class NestedClass1 implements MyInterface { public void m() throws Ex1 {} } private static class NestedClass2 implements MyInterface { public void m() throws Ex2 {} } private static class NestedClassBoth implements MyInterface { public void m() throws Ex1, Ex2 {} } private static class NestedClassNeither implements MyInterface { public void m() {} } }